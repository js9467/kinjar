name: Deploy kinjar-api to Fly.io

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  FLY_APP: kinjar-api
  PRIMARY_REGION: atl

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install flyctl
        uses: superfly/flyctl-actions/setup-flyctl@v1

      - name: Verify flyctl
        run: |
          which fly
          fly version

      - name: Preflight (verify files and mounts)
        run: |
          set -euo pipefail
          test -f ./fly.toml
          test -f ./Dockerfile
          echo "=== Verify [mounts] -> /data ==="
          grep -n '^\[mounts\]' ./fly.toml
          grep -n 'source *= *"data"' ./fly.toml
          grep -n 'destination *= *"/data"' ./fly.toml

      - name: Ensure volume exists
        run: |
          set -euo pipefail
          if fly volumes list -a "$FLY_APP" | awk '{print $2}' | grep -qx data; then
            echo "Volume 'data' already exists."
          else
            fly volumes create data -a "$FLY_APP" -r "$PRIMARY_REGION" --size 1
          fi
          fly volumes list -a "$FLY_APP"

      - name: Deploy (remote build)
        run: |
          set -euo pipefail
          fly deploy -a "$FLY_APP" --config ./fly.toml --dockerfile ./Dockerfile --remote-only --now

      - name: Post-deploy sanity
        run: |
          set -euo pipefail
          fly status -a "$FLY_APP"
          fly machines list -a "$FLY_APP"
          fly volumes list -a "$FLY_APP"
