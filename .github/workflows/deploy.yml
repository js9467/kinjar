name: Deploy to Fly.io (ATL, 1 machine, 1 volume)

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      FLY_APP: kinjar-api
      FLY_ORG: kinjar
      FLY_REGION: atl

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install flyctl
        uses: superfly/flyctl-actions/setup-flyctl@v1

      # Create app if missing (must specify org when non-interactive)
      - name: Ensure app exists
        shell: bash
        run: |
          set -euo pipefail
          if flyctl apps show "$FLY_APP" >/dev/null 2>&1; then
            echo "App exists."
          else
            echo "Creating app in org $FLY_ORG…"
            flyctl apps create "$FLY_APP" --org "$FLY_ORG"
          fi

      # Force exactly one machine; primary_region in fly.toml handles placement
      - name: Scale to 1 machine
        run: flyctl scale count 1 --app "$FLY_APP"

      # Ensure exactly one 'data' volume exists in ATL
      - name: Ensure 'data' volume exists in ATL
        shell: bash
        run: |
          set -euo pipefail
          if flyctl volumes list --app "$FLY_APP" | awk '$2=="data" && $4=="atl" {found=1} END{exit !found}'; then
            echo "Volume 'data' in atl already exists."
          else
            echo "Creating volume 'data' in atl…"
            flyctl volumes create data --app "$FLY_APP" --region "$FLY_REGION" --size 1
          fi

      - name: Deploy (remote builder)
        run: flyctl deploy --app "$FLY_APP" --remote-only --verbose
